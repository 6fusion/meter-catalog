apiVersion: v1
kind: Template
metadata:
  name: openshift-collector
  annotations:
    pluginVersion: "alpha"
    displayName: "OpenShift Collector"
    description: "6fusion Meter Collector for OpenShift"
    version: "alpha"
    iconClass: "fa fa-plug"
    tags: "6fusion, Meter, Collector"
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: 6fusion-openshift-collector
- apiVersion: v1
  kind: Service
  metadata:
    name: mongodb
    labels:
      6fusion-app: mongodb
  spec:
    ports:
      - port: 27017
        protocol: TCP
        name: database
    selector:
      6fusion-app: mongodb
- apiVersion: v1
  kind: ReplicationController
  metadata:
    name: mongodb
    labels:
      6fusion-app: mongodb
  spec:
    replicas: 1
    selector:
      6fusion-app: mongodb
    template:
      metadata:
        name: mongodb
        labels:
          6fusion-app: mongodb
      spec:
        containers:
        - name: mongodb
          image: mongo:3.4.0
          volumeMounts:
          - mountPath: /data/db
            name: openshift-collector-mongodb
        volumes:
        - name: openshift-collector-mongodb
          emptyDir:
            medium: ""
- apiVersion: v1
  kind: ReplicationController
  metadata:
    name: 6fusion-inventory-collector
    labels:
      6fusion-app: inventory-collector
      version: "alpha"
  spec:
    replicas: 1
    selector:
      6fusion-app: inventory-collector
      version: "alpha"
    template:
      metadata:
        name: 6fusion-inventory-collector
        labels:
          6fusion-app: inventory-collector
          version: "alpha"
      spec:
        serviceAccount: 6fusion-openshift-collector
        containers:
        - name: inventory-collector
          image: docker.io/6fusion/openshift-collector:alpha
          imagePullPolicy: Always
          args: ["inventory/run.rb"]
          env:
          - name: LOG_LEVEL
            value: debug
          - name: INFRASTRUCTURE_NAME
            value: ${infrastructure_name}
          - name: OPENSHIFT_DOMAIN
            value: ${openshift_domain}
          - name: KUBERNETES_USE_SSL
            value: ${openshift_use_ssl}
          - name: KUBERNETES_VERIFY_SSL
            value: ${openshift_verify_ssl} 
          - name: KUBELET_SERVICE_PORT_KUBELET
            value: ${openshift_kubelet_port}
          - name: DOCKER_CGROUP_NAMESPACE
            value: ${openshift_docker_cgroup_namespace}
          - name: ONPREMISE_ORGANIZATION_ID
            value: ${on_premise_organization_id}
          - name: ONPREMISE_TOKEN
            value: ${on_premise_token}
          - name: ONPREMISE_SERVICE_HOST
            value: ${on_premise_host}
          - name: ONPREMISE_SERVICE_PORT_ONPREMISE
            value: ${on_premise_port}
          - name: ONPREMISE_USE_SSL
            value: ${on_premise_use_ssl}
          - name: ONPREMISE_VERIFY_SSL
            value: ${on_premise_verify_ssl}
        imagePullSecrets:
          - name: meter-registry
- apiVersion: v1
  kind: ReplicationController
  metadata:
    name: 6fusion-onpremise-connector
    labels:
      6fusion-app: onpremise-connector
      version: "alpha"
  spec:
    replicas: 1
    selector:
      6fusion-app: onpremise-connector
      version: "alpha"
    template:
      metadata:
        name: 6fusion-onpremise-connector
        labels:
          6fusion-app: onpremise-connector
          version: "alpha"
      spec:
        serviceAccount: 6fusion-openshift-collector
        containers:
        - name: onpremise-connector
          image: docker.io/6fusion/openshift-collector:alpha
          imagePullPolicy: Always
          args: ["on_premise/run.rb"]
          env:
          - name: LOG_LEVEL
            value: debug
          - name: ONPREMISE_ORGANIZATION_ID
            value: ${on_premise_organization_id}
          - name: ONPREMISE_TOKEN
            value: ${on_premise_token}
          - name: ONPREMISE_SERVICE_HOST
            value: ${on_premise_host}
          - name: ONPREMISE_SERVICE_PORT_ONPREMISE
            value: ${on_premise_port}
          - name: ONPREMISE_USE_SSL
            value: ${on_premise_use_ssl}
          - name: ONPREMISE_VERIFY_SSL
            value: ${on_premise_verify_ssl}
        imagePullSecrets:
          - name: meter-registry
- apiVersion: v1
  kind: ReplicationController
  metadata:
    name: 6fusion-cache-cleaner
    labels:
      6fusion-app: cache-cleaner
      version: "alpha"
  spec:
    replicas: 1
    selector:
      6fusion-app: cache-cleaner
      version: "alpha"
    template:
      metadata:
        name: 6fusion-cache-cleaner
        labels:
          6fusion-app: cache-cleaner
          version: "alpha"
      spec:
        containers:
        - name: cleancache
          image: docker.io/6fusion/openshift-collector:alpha
          imagePullPolicy: Always
          args: ["clean_cache/run.rb"]
          env:
          - name: LOG_LEVEL
            value: debug
          - name: CLEANCACHE_DATA_AGE_PERIOD
            value: ${data_age_period}
        imagePullSecrets:
          - name: meter-registry
- apiVersion: v1
  kind: ReplicationController
  metadata:
    name: 6fusion-metrics-collector
    labels:
      6fusion-app: metrics-collector
      version: "alpha"
  spec:
    replicas: 1
    selector:
      6fusion-app: metrics-collector
      version: "alpha"
    template:
      metadata:
        name: 6fusion-metrics-collector
        labels:
          6fusion-app: metrics-collector
          version: "alpha"
      spec:
        serviceAccount: 6fusion-openshift-collector
        containers:
        - name: metrics-collector
          image: docker.io/6fusion/openshift-collector-metrics:alpha
          imagePullPolicy: Always
          args: ["metrics/run.rb"]
          env:
          - name: LOG_LEVEL
            value: debug
          - name: KUBERNETES_USE_SSL
            value: ${openshift_use_ssl}
          - name: KUBERNETES_VERIFY_SSL
            value: ${openshift_verify_ssl} 
          - name: KUBELET_SERVICE_PORT_KUBELET
            value: ${openshift_kubelet_port}
          - name: DOCKER_CGROUP_NAMESPACE
            value: ${openshift_docker_cgroup_namespace}
        imagePullSecrets:
          - name: meter-registry
parameters:
# OpenShift
- name: infrastructure_name
  displayName: "Infrastructure Name"
  description: "A unique name to be applied to the OpenShift infrastructure."
  section: openshift
  validations:
    required: true
- name: openshift_domain
  displayName: "OpenShift Domain"
  description: "The domain of your OpenShift Cluster."
  section: openshift
  validations:
    required: true
- name: log_level
  displayName: "Log Level"
  section: openshift
  advanced: true
  value: info
  type: enum
  options:
    - debug
    - info
    - warn
    - error
    - fatal
- name: openshift_use_ssl
  displayName: "Use SSL?"
  description: "Access Kubernetes API over SSL"
  section: openshift
  type: boolean
  value: "true"
  advanced: true
- name: openshift_verify_ssl
  displayName: "Verify SSL?"
  description: "Verify Kubernetes SSL certificate. Do not enable if using self-signed certificates."
  section: openshift
  type: boolean
  value: "false"
  advanced: true
- name: openshift_kubelet_port
  displayName: "Kubelet Port"
  section: openshift
  type: int
  value: "10250"
  advanced: true
- name: openshift_docker_cgroup_namespace
  displayName: "Docker Cgroup namespace"
  section: openshift
  type: string
  value: "/system.slice/docker-"
  advanced: true
- name: data_age_period
  displayName: "Data Age Period"
  description: "Age period of data for clean cache. Must be in minutes."
  section: openshift
  type: int
  value: "60"
  suffix: "minutes"
  advanced: true

# Meter API
- name: on_premise_organization_id
  displayName: "Organization ID"
  description: "ID of the 6fusion Meter organization object to submit under."
  section: meter-api
  type: string
  expandExpression: ${ORGANIZATION_ID}
  advanced: true
- name: on_premise_token
  displayName: "OAuth Token"
  description: "OAuth Token for accessing the 6fusion Meter. Leave blank if not enabled."
  section: meter-api
  type: string
  expandExpression: ${METER_API_TOKEN}
  advanced: true
- name: on_premise_host
  displayName: "Host"
  description: "Address of the 6fusion Meter"
  section: meter-api
  type: string
  expandExpression: ${METER_API_HOST}
  advanced: true
- name: on_premise_port
  displayName: "Port"
  description: "TCP Port of the 6fusion Meter API"
  section: meter-api
  type: int
  value: "443"
  advanced: true
- name: on_premise_use_ssl
  displayName: "Use SSL?"
  description: "Access the 6fusion Meter over SSL"
  section: meter-api
  type: boolean
  value: "true"
  advanced: true
- name: on_premise_verify_ssl
  displayName: "Verify SSL?"
  description: "Verify Meter API SSL certifciate. Do not enable if using self-signed certificates."
  section: meter-api
  type: boolean
  value: "false"
  advanced: true
